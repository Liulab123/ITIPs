#!/usr/bin/perl

use warnings;
use strict;
use Getopt::Long;


#--Usage-----------------------------------------

my $usage=<<USAGE;

                ****** extract flanking seuqences of each TE insertion ******

		Usage: perl $0  -refGenome <ref.fa>  -refName  <ref>   -script <the path to scripts>  reference_TE.insertions.xls  non-reference_TE.insertions.xls
                
		-refGenome	[required] the reference genome in fasta foramt.
		-refName	[required] the reference genome name, same as provided in the first step. 
		-script 	[required] the path to perl scripts

                Author: Xu Cai
                Bug report: caixu0518\@163.com

USAGE

my ($in0, $in1, $script);

GetOptions(
        "refGenome:s"   =>\$in0,
        "refName:s"     =>\$in1,
        "script:s"      =>\$script,
);

die $usage if (!defined $in0 || !defined $in1 || ! defined $script);
die "the results generated by the first step should be checked !!!!\n\n", if(not -e "reference_TE.insertions.xls" || not -e "non-reference_TE.insertions.xls");


my $INSFile = $in1.".merged.INS.gz.withMorethan80_TE_cov";

   die "!!! cannot not find the $in1.merged.INS.gz.withMorethan80_TE_cov file, the results generated by the first step should be checked !!!!\n\n", if(not -e $INSFile);


my $cmdString = "perl $script/get_referenceTEinsertions_and_flanking_Seqs.pl  $in0   reference_TE.insertions.xls    $in1";
   print STDERR (localtime) . ": CMD: $cmdString\n";
   system("$cmdString") == 0 or die "failed to execute: $cmdString\n";

   $cmdString = "perl $script/get_nonReferenceTEinsertions_and_flanking_Seqs.pl  $in0  non-reference_TE.insertions.xls   $INSFile  $in1";
   print STDERR (localtime) . ": CMD: $cmdString\n";
   system("$cmdString") == 0 or die "failed to execute: $cmdString\n";
